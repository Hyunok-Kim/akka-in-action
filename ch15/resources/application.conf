passivate-timeout = 5 seconds

http {
  host = "0.0.0.0"
  port = 5000
}

akka {
  #loglevel = DEBUG
  #stdout-loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor {
    provider = cluster
    serializers {
      basket = "aia.persistence.BasketEventSerializer"
      basketSnapshot = "aia.persistence.BasketSnapshotSerializer"
    }
    serialization-bindings {
      "aia.persistence.calculator.MySerializable" = jackson-json
      "aia.persistence.Basket$Event" = basket
      "aia.persistence.Basket$Snapshot" = basketSnapshot
    }
  }

  remote {
    artery {
      enabled = on
      transport = tcp
      canonical {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }

  cluster {
    seed-nodes = [
      "akka://shoppers@127.0.0.1:2552", 
      "akka://shoppers@127.0.0.1:2553"
    ]
  }
  persistence {
    journal {
      plugin = mapdb-journal
    }
    snapshot-store {
      plugin = mapdb-snapshot
    }
  }
}
akka-persistence-mapdb {
  
  db {
    # The MapDB storage mode. Available modes:
    #   "memory":    data is stored in memory and not available after JVM shutdown/restart
    #   "file":      data is stored in a file and available after JVM shutdown/restart
    #   "temp-file": data is stored in a temporary file and not available after JVM shutdown/restart
    mode = "file"

    # Whether to enable MapDB's transactions and crash protection (https://jankotek.gitbooks.io/mapdb/content/performance/#transactions-and-crash-protection)
    transaction-enable = true

    # Whether to close the MapDB connection on JVM shutdown
    close-on-jvm-shutdown = true

    # Customization settings if you use the "file" mode
    file {
      # A valid Java Path to be used as the storage location
      path = "akka-persistence-mapdb_default"

      # Whether to delete the file after closing the MapDB connection (useful for testing)
      delete-after-close = false
    }
  }

}
